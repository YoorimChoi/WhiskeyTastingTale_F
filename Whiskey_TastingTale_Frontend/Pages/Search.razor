@page "/search"
@using Whiskey_TastingTale_Backend.Model
@using Whiskey_TastingTale_Frontend.ViewModels
@using Whiskey_TastingTale_Frontend.Components
@inject SearchViewModel ViewModel 
@inject NavigationManager NavigationManager


<MudCard>
    <MudCardContent>
        <MudText Typo="Typo.h5" Align="Align.Left" GutterBottom="true">"@ViewModel.SearchWord" 검색 결과</MudText>

        <MudGrid Spacing="1" Class="pt-2">
            @foreach (Whiskey product in ViewModel.SearchResult)
            {
                <MudItem xs="12" sm="6" md="4" @onclick="@(() => HandleItemClick(product))">
                    <MudCard Class="card-fixed-size">
                        <MudCardMedia Image=@GetFullImageUrl(product.img_index) Class = "image-fit"   />
                        <MudCardContent>
                            <MudText Typo="Typo.h5" Class="text-ellipsis">@product.whiskey_name</MudText>
                            <MudStack Row="true">
                                <RatingComponent RatingValue=product.rating> </RatingComponent>
                                <MudText> @product.rating 점 / @product.review_count 개 </MudText>
                            </MudStack>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    </MudCardContent>
</MudCard>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadData();
        base.OnInitialized();
    }
    private string GetFullImageUrl(string imagePath)
    {
        return "https://localhost:7299/images/" + imagePath;
    }

    private async void HandleItemClick(Whiskey product)
    {
        await ViewModel.ClickedItem(product); 
        NavigationManager.NavigateTo("/details"); 
    }
}
