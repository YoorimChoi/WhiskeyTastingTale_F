@page "/mypage"
@using Whiskey_TastingTale_Frontend.Components
@using Whiskey_TastingTale_Frontend.Services
@using Whiskey_TastingTale_Frontend.ViewModels
@inject UserState UserState
@inject PageState PageState
@inject MyPageViewModel ViewModel
@inject NavigationManager NavigationManager
@inject RestApiHelper helper


<div style="display: flex; justify-content: center; width: 100%;">
    <MudCard Style="margin:20px; max-width:600px; min-width:600px; background-color:lightgrey">
        <MudCardContent>
            <MudStack Row="true">
                <MudText Style="Margin:7px"> <b>"@UserState.Nickname" 님의 마이페이지</b></MudText>
                <MudSpacer></MudSpacer>
                <MudButton OnClick="modifyUserInfo" Style="background-color:white"> 정보 수정 </MudButton>
            </MudStack>
        </MudCardContent>
    </MudCard>
</div>
<div style="display: flex; justify-content: center; width: 100%;">
    <MudCard Style="margin:20px; margin-top:0px; min-width:600px; max-width:600px; background-color:lightgrey">
        <MudCardContent>
            <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.Chat" Size="Size.Small" />
                <MudText Typo="Typo.body2"> <b>위스키 등록 요청</b>  </MudText>
                <div style="flex-grow: 1;"></div>
                <MudIconButton Icon="@Icons.Material.Filled.ArrowForwardIos"
                               Size="Size.Small"
                               OnClick="@ShowWhiskeyAddPage">
                </MudIconButton>
            </MudStack>
        </MudCardContent>
    </MudCard>
</div>
<div style="display: flex; justify-content: center; width: 100%;">
    <MudCard Style="margin:20px; margin-top:0px; min-width:600px; max-width:600px; background-color:lightgrey">
        <MudCardContent>
            <MudStack Row="true" Justify="Justify.FlexStart">
                <MudIcon Icon="@Icons.Material.Filled.Chat" Size="Size.Small"/>
                <MudText Typo="Typo.body2"> <b>내 리뷰</b>  </MudText>
                <div style="flex-grow: 1;"></div> 
                <MudIconButton 
                    Icon="@Icons.Material.Filled.ArrowForwardIos" 
                    Size="Size.Small"
                               OnClick="@ShowMorePrivateReview">
                </MudIconButton>
            </MudStack>
            @if (ViewModel.MyReview != null)
            {
                <MudCard Style="margin-top:10px" >
                    <MudStack Row="true" Style="margin:20px;margin-right:0px;">
                        <MudImage Src=@GetFullImageUrl(ViewModel.MyReview.whiskey_img_index) Style = "width:100px;"></MudImage>
                        <MudStack>
                            <MudSpacer></MudSpacer>
                            <MudText Class="text-ellipsis"><b>@ViewModel.MyReview.whiskey_name</b></MudText>
                            <RatingComponent RatingValue=@ViewModel.MyReview.rating></RatingComponent>
                            <MudText Class="text-ellipsis"> @ViewModel.MyReview.review_text  </MudText>
                            <MudText Typo="Typo.body2" Align="Align.End"> @ViewModel.MyReview.updated_date </MudText>
                        </MudStack> 
                    </MudStack>
                </MudCard>
            }else
            {
                <MudText Typo="Typo.body2"> 리뷰가 없습니다. </MudText>
            }
        </MudCardContent>
    </MudCard>
</div>
<div style="display: flex; justify-content: center; width: 100%;">
    <MudCard Style="margin:20px; margin-top:0px; min-width:600px; max-width:600px; background-color:lightgrey">
        <MudCardContent>
            <MudStack Row="true" Justify="Justify.FlexStart">
                <MudIcon Icon="@Icons.Material.Filled.Chat" Size="Size.Small"/>
                <MudText Typo="Typo.body2"> <b>내 위시리스트</b>  </MudText>
                <div style="flex-grow: 1;"></div> 
                <MudIconButton 
                    Icon="@Icons.Material.Filled.ArrowForwardIos" 
                    Size="Size.Small"
                               OnClick="@ShowMoreWishList">
                </MudIconButton>
            </MudStack>
            <MudCard Style=" margin-top:10px;background-color:white">
                <MudCardContent>
            @if(ViewModel.MyWishs.Count != 0)
            {
                <MudGrid Spacing="1" Class="pt-2">
                    @for(int i =0; i<(ViewModel.MyWishs.Count > 3? 3: ViewModel.MyWishs.Count); i++)
                    {
                        var wish = ViewModel.MyWishs[i];
                        <MudItem xs="12" sm="6" md="4">
                            <MudCard style="width:150px; height:270px">
                                <MudImage Src=@GetFullImageUrl(wish.img_index)></MudImage>
                                <MudSpacer></MudSpacer>
                                <MudText Typo="Typo.body2" Class="text-ellipsis">@wish.whiskey_name</MudText>
                                <RatingComponent RatingValue=wish.rating></RatingComponent>
                                <MudText Typo="Typo.body2">@Double.Round(wish.rating, 1) 점 / @wish.review_count 개 </MudText>
                            </MudCard>
                        </MudItem>
                    }
                </MudGrid>
            }else
            {
                <MudText Typo="Typo.body2"> 위시리스트가 없습니다. </MudText>
            }
                </MudCardContent>
            </MudCard>
        </MudCardContent>
    </MudCard>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadData(); 
        base.OnInitializedAsync();
    }

    private string GetFullImageUrl(string imagePath)
    {
        return helper.server_uri + "images/" + imagePath;
    }

    private void modifyUserInfo()
    {
        NavigationManager.NavigateTo("/private_info");
    } 

    private void ShowMorePrivateReview()
    {
        NavigationManager.NavigateTo("/private_reviews");
    }

    private void ShowMoreWishList()
    {
        NavigationManager.NavigateTo("/private_wishs");
    }

    private void ShowWhiskeyAddPage()
    {
        NavigationManager.NavigateTo("/request_list");
    }
}
