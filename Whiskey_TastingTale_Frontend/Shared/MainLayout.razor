@using Whiskey_TastingTale_Frontend.Services
@using Whiskey_TastingTale_Frontend.ViewModels
@using Whiskey_TastingTale_Frontend.Pages

@inherits LayoutComponentBase
@inject UserState State 
@inject PageState PageState
@inject NavigationManager NavigationManager
@inject SearchViewModel ViewModel
<MudThemeProvider />
<MudDialogProvider />
<MudPopoverProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudAvatar Square="true" @onclick="HandleHpmeClicked">
            <MudImage Src="images/icon.png"></MudImage>
        </MudAvatar>
        <MudText Typo="Typo.h5" Class="ml-3">Whiskey_TT</MudText>
        <MudTextField @bind-Value="ViewModel.SearchWord" Style="margin:20px;" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" OnKeyUp="@HandleKeyPress" />
        @{
            if(State.Token != null)
            {
                <MudButton Style="margin-right:20px" Variant="Variant.Filled" Color="Color.Secondary" OnClick="HandleMyPageClicked">MyPage</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="HandleLogoutClicked">logout</MudButton>
            }
            else
            {
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="HandleLoginClicked">login</MudButton>
            }
        }
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {

    private void HandleLoginClicked()
    {
        PageState.PriviousPage = "/" + NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.NavigateTo("/login" );
    }

    private void HandleLogoutClicked()
    {
        State.init();
        if (NavigationManager.ToBaseRelativePath(NavigationManager.Uri).Equals("mypage")){
            NavigationManager.NavigateTo("/home" );

        }
    }
    private void HandleMyPageClicked()
    {
        NavigationManager.NavigateTo("/mypage" );
    }
    private void HandleHpmeClicked()
    {
        PageState.init();  
        NavigationManager.NavigateTo("/home" );
    }

    private void HandleKeyPress(KeyboardEventArgs args)
    {

        if (args.Key == "Enter" && ViewModel.SearchWord != String.Empty)
        {
            NavigationManager.NavigateTo("/search", forceLoad:true );
        }
    }
}